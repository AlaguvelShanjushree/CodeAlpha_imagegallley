package runner;

import java.io.IOException;
import java.net.MalformedURLException;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;

import utils.Base;
import utils.LoggerHandler;
import utils.Reporter;
import utils.Screenshot;

public class TestRunner extends Base {
    static ExtentReports ext=null;
    static ExtentTest test=null;
    Reporter rep=new Reporter();

    @BeforeClass
    public void bef(){
        ext=Reporter.generateExtentReport("reports");

    }

    @BeforeMethod
    public void launchBrowser() throws MalformedURLException  {
        // launch your browser
        openBrowser(); 

    }

    @Test
    public void testOne() throws IOException {
        // write or call ur pages here
        Screenshot.getScreenShot(driver,"screenshots");
        test=ext.createTest("screenshot");

        WebElement iam=driver.findElement(By.xpath("//div[@class='_1WRJuyTt _3dVVljYP _2FR6nyQk']"));
        iam.click();
        WebElement dev=driver.findElement(By.xpath("(//div[@class='_26cjR6gi'])[1]"));
        dev.click();
        WebElement fn=driver.findElement(By.xpath("//input[@id='talent_create_applicant[fullName]']"));
        fn.sendKeys("Fullname");
        WebElement email=driver.findElement(By.xpath("//input[@id='talent_create_applicant[email]']"));
        email.sendKeys("Email@email.com");

        WebElement pass=driver.findElement(By.xpath("//input[@id='talent_create_applicant[password]']"));
        pass.sendKeys("password@007");

        WebElement app=driver.findElement(By.xpath("//button[@type='submit']"));
        app.click();

        for(int i=0;i<300;i++)
        {
            LoggerHandler.logInfo("pass");
            test.pass("pass");
        }
       

    }

    @AfterMethod
    public void tearDown() {
        // quit the driver here
        if(driver!=null)
        {
            driver.quit();
        }
    }

    @AfterClass
    public void aft(){
        ext.flush();
    }
}
